@page "/editfuncao/{id}"
@inject MegaWeb.Client.Services.Interfaces.IFuncaoService funcaoService
@inject NavigationManager NavigationManager
@using MegaWeb.Shared.Response

<h1>Cadastro de Funções</h1>
<hr />

<EditForm Model="@funcao" OnValidSubmit="@UpdateFuncao">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="Descricao" class="control-label">Descrição</label>
                <input fornm="Descricao" class="form-control" @bind-value="funcao.Descricao" />
                <ValidationMessage For="@(() => funcao.Descricao)" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-success" @onclick="@(async () => await UpdateFuncao())">Salvar</button>
                <button class="btn btn-danger" @onclick=@Cancelar>Cancelar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string id { get; set; }

    FuncaoResponse funcao = new();

    public async Task UpdateFuncao()
    {
        if (funcao.Descricao != null)
        {
            await funcaoService.Update(funcao);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            return;
        }
    }

    public void Cancelar()
    {
        NavigationManager.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {
        funcao = await funcaoService.GetById(int.Parse(id));
    }
}